---
- name: Ubuntu Server RPi - Initial Configuration
  hosts: stage
  become: true

  tasks:
    - name: Update cache and upgrade all packages
      register: updatesys
      ansible.builtin.apt:
        name: "*"
        state: latest
        update_cache: yes
        cache_valid_time: 86400 #One day

    - name: Display the last line of the previous task to check the stats
      debug:
        msg:  "{{updatesys.stdout_lines|last}}"

    - name: Configure the PoE HAT fan thresholds
      ansible.builtin.blockinfile:
        path: /boot/firmware/config.txt
        block: |
          # PoE Hat Fan Speeds
          dtoverlay=rpi-poe
          dtparam=poe_fan_temp0=65000
          dtparam=poe_fan_temp1=74000
          dtparam=poe_fan_temp2=76000
          dtparam=poe_fan_temp3=81000
        
    - name: Check if reboot is needed
      ansible.builtin.stat:
        path: /var/run/reboot-required
      register: reboot_required

    - name: Add FQDN to /etc/hosts
      ansible.builtin.lineinfile:
        dest: /etc/hosts
        regexp: '^127\.0\.1\.1'
        line: '127.0.1.1 {{ inventory_hostname }} {{ inventory_hostname_short }}'
        state: present

    - name: Static IP address in the "Servers" VLAN
      ansible.builtin.get_url:
        url: https://raw.githubusercontent.com/valentin-voica/configs/main/ubuntu_2004/50-cloud-init.yaml
        dest: /etc/netplan/50-cloud-init.yaml
        owner: root
        group: root
        mode: 0644
      notify:
        - netplan apply
      when: cfg_static_network == true

    - name: Reboot the server if needed
      ansible.builtin.reboot:
        msg: "Reboot initiated by Ansible because of reboot required file."
        connect_timeout: 5
        reboot_timeout: 60
        pre_reboot_delay: 0
        post_reboot_delay: 30
        test_command: whoami
      when: reboot_required.stat.exists

    - name: Remove old packages from the cache
      ansible.builtin.apt:
        autoclean: yes

    - name: Remove dependencies that are no longer needed
      ansible.builtin.apt:
        autoremove: yes
        purge: yes

  handlers:
    - name: netplan apply
      command: netplan apply
      when: cfg_static_network == true 
